name: Build PostgreSQL Extension

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        pg-version: [17]

    steps:
    - uses: actions/checkout@v4

    - name: Setup PostgreSQL
      run: |
        choco install postgresql${{ matrix.pg-version }} --params '/Password:postgres'
        echo "C:\Program Files\PostgreSQL\${{ matrix.pg-version }}\bin" >> $GITHUB_PATH
        echo "C:\Program Files\PostgreSQL\${{ matrix.pg-version }}\lib" >> $GITHUB_PATH
      shell: bash

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-postgresql
          make

    - name: List Directory Structure
      shell: bash
      run: |
        ls -R

    - name: Build Extension
      shell: msys2 {0}
      run: |
        # Create build directory
        mkdir -p build
        # Copy necessary files to build directory
        cp pg_uuidv7.c build/
        cp -r sql build/
        cp *.control build/
        cp Makefile.win build/
        # Build
        cd build
        make -f Makefile.win

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pg_uuidv7-win-pg${{ matrix.pg-version }}
        path: |
          build/*.dll
          build/sql/*.sql
          build/*.control
        compression-level: 9
        retention-days: 5

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}